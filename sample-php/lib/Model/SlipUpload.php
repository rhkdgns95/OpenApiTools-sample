<?php
/**
 * SlipUpload
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 뱅크다K 웹앱 REST API
 *
 * 뱅크다K 웹앱 REST API : 관리자, 장부사, 고객사
 *
 * The version of the OpenAPI document: 0.5.2
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * SlipUpload Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class SlipUpload implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'SlipUpload';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'trans_datetime' => 'string',
        'bill_date' => 'string',
        'trans_date' => 'string',
        'esti_code' => 'string',
        'esti_inout' => 'string',
        'bill_memo' => 'string',
        'bill_bigo' => 'string',
        'bill_support_at' => 'string',
        'bill_nuri_at' => 'string',
        'trans_gb' => 'string',
        'trans_money' => 'string',
        'trans_money_in' => 'string',
        'trans_money_out' => 'string',
        'trans_remain' => 'string',
        'trans_memo' => 'string',
        'setle_mthd' => 'string',
        'voucher' => '\OpenAPI\Client\Model\SlipUploadVoucher[]',
        'esti_idx' => 'string',
        'esti_name' => 'string',
        'esti_depth' => 'string',
        'esti_name_1' => 'string',
        'esti_name_2' => 'string',
        'esti_name_3' => 'string',
        'bill_subcode' => 'string',
        'esti_display' => 'string',
        'esti_gb' => 'string',
        'esti_part' => 'string',
        'esti_sub_nm' => 'string',
        'esti_sub_yn' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'trans_datetime' => null,
        'bill_date' => null,
        'trans_date' => null,
        'esti_code' => null,
        'esti_inout' => null,
        'bill_memo' => null,
        'bill_bigo' => null,
        'bill_support_at' => null,
        'bill_nuri_at' => null,
        'trans_gb' => null,
        'trans_money' => null,
        'trans_money_in' => null,
        'trans_money_out' => null,
        'trans_remain' => null,
        'trans_memo' => null,
        'setle_mthd' => null,
        'voucher' => null,
        'esti_idx' => null,
        'esti_name' => null,
        'esti_depth' => null,
        'esti_name_1' => null,
        'esti_name_2' => null,
        'esti_name_3' => null,
        'bill_subcode' => null,
        'esti_display' => null,
        'esti_gb' => null,
        'esti_part' => null,
        'esti_sub_nm' => null,
        'esti_sub_yn' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'trans_datetime' => 'TRANS_DATETIME',
        'bill_date' => 'BILL_DATE',
        'trans_date' => 'TRANS_DATE',
        'esti_code' => 'ESTI_CODE',
        'esti_inout' => 'ESTI_INOUT',
        'bill_memo' => 'BILL_MEMO',
        'bill_bigo' => 'BILL_BIGO',
        'bill_support_at' => 'BILL_SUPPORT_AT',
        'bill_nuri_at' => 'BILL_NURI_AT',
        'trans_gb' => 'TRANS_GB',
        'trans_money' => 'TRANS_MONEY',
        'trans_money_in' => 'TRANS_MONEY_IN',
        'trans_money_out' => 'TRANS_MONEY_OUT',
        'trans_remain' => 'TRANS_REMAIN',
        'trans_memo' => 'TRANS_MEMO',
        'setle_mthd' => 'SETLE_MTHD',
        'voucher' => 'VOUCHER',
        'esti_idx' => 'ESTI_IDX',
        'esti_name' => 'ESTI_NAME',
        'esti_depth' => 'ESTI_DEPTH',
        'esti_name_1' => 'ESTI_NAME_1',
        'esti_name_2' => 'ESTI_NAME_2',
        'esti_name_3' => 'ESTI_NAME_3',
        'bill_subcode' => 'BILL_SUBCODE',
        'esti_display' => 'ESTI_DISPLAY',
        'esti_gb' => 'ESTI_GB',
        'esti_part' => 'ESTI_PART',
        'esti_sub_nm' => 'ESTI_SUB_NM',
        'esti_sub_yn' => 'ESTI_SUB_YN'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'trans_datetime' => 'setTransDatetime',
        'bill_date' => 'setBillDate',
        'trans_date' => 'setTransDate',
        'esti_code' => 'setEstiCode',
        'esti_inout' => 'setEstiInout',
        'bill_memo' => 'setBillMemo',
        'bill_bigo' => 'setBillBigo',
        'bill_support_at' => 'setBillSupportAt',
        'bill_nuri_at' => 'setBillNuriAt',
        'trans_gb' => 'setTransGb',
        'trans_money' => 'setTransMoney',
        'trans_money_in' => 'setTransMoneyIn',
        'trans_money_out' => 'setTransMoneyOut',
        'trans_remain' => 'setTransRemain',
        'trans_memo' => 'setTransMemo',
        'setle_mthd' => 'setSetleMthd',
        'voucher' => 'setVoucher',
        'esti_idx' => 'setEstiIdx',
        'esti_name' => 'setEstiName',
        'esti_depth' => 'setEstiDepth',
        'esti_name_1' => 'setEstiName1',
        'esti_name_2' => 'setEstiName2',
        'esti_name_3' => 'setEstiName3',
        'bill_subcode' => 'setBillSubcode',
        'esti_display' => 'setEstiDisplay',
        'esti_gb' => 'setEstiGb',
        'esti_part' => 'setEstiPart',
        'esti_sub_nm' => 'setEstiSubNm',
        'esti_sub_yn' => 'setEstiSubYn'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'trans_datetime' => 'getTransDatetime',
        'bill_date' => 'getBillDate',
        'trans_date' => 'getTransDate',
        'esti_code' => 'getEstiCode',
        'esti_inout' => 'getEstiInout',
        'bill_memo' => 'getBillMemo',
        'bill_bigo' => 'getBillBigo',
        'bill_support_at' => 'getBillSupportAt',
        'bill_nuri_at' => 'getBillNuriAt',
        'trans_gb' => 'getTransGb',
        'trans_money' => 'getTransMoney',
        'trans_money_in' => 'getTransMoneyIn',
        'trans_money_out' => 'getTransMoneyOut',
        'trans_remain' => 'getTransRemain',
        'trans_memo' => 'getTransMemo',
        'setle_mthd' => 'getSetleMthd',
        'voucher' => 'getVoucher',
        'esti_idx' => 'getEstiIdx',
        'esti_name' => 'getEstiName',
        'esti_depth' => 'getEstiDepth',
        'esti_name_1' => 'getEstiName1',
        'esti_name_2' => 'getEstiName2',
        'esti_name_3' => 'getEstiName3',
        'bill_subcode' => 'getBillSubcode',
        'esti_display' => 'getEstiDisplay',
        'esti_gb' => 'getEstiGb',
        'esti_part' => 'getEstiPart',
        'esti_sub_nm' => 'getEstiSubNm',
        'esti_sub_yn' => 'getEstiSubYn'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['trans_datetime'] = $data['trans_datetime'] ?? null;
        $this->container['bill_date'] = $data['bill_date'] ?? null;
        $this->container['trans_date'] = $data['trans_date'] ?? null;
        $this->container['esti_code'] = $data['esti_code'] ?? null;
        $this->container['esti_inout'] = $data['esti_inout'] ?? null;
        $this->container['bill_memo'] = $data['bill_memo'] ?? null;
        $this->container['bill_bigo'] = $data['bill_bigo'] ?? null;
        $this->container['bill_support_at'] = $data['bill_support_at'] ?? null;
        $this->container['bill_nuri_at'] = $data['bill_nuri_at'] ?? null;
        $this->container['trans_gb'] = $data['trans_gb'] ?? null;
        $this->container['trans_money'] = $data['trans_money'] ?? null;
        $this->container['trans_money_in'] = $data['trans_money_in'] ?? null;
        $this->container['trans_money_out'] = $data['trans_money_out'] ?? null;
        $this->container['trans_remain'] = $data['trans_remain'] ?? null;
        $this->container['trans_memo'] = $data['trans_memo'] ?? null;
        $this->container['setle_mthd'] = $data['setle_mthd'] ?? null;
        $this->container['voucher'] = $data['voucher'] ?? null;
        $this->container['esti_idx'] = $data['esti_idx'] ?? null;
        $this->container['esti_name'] = $data['esti_name'] ?? null;
        $this->container['esti_depth'] = $data['esti_depth'] ?? null;
        $this->container['esti_name_1'] = $data['esti_name_1'] ?? null;
        $this->container['esti_name_2'] = $data['esti_name_2'] ?? null;
        $this->container['esti_name_3'] = $data['esti_name_3'] ?? null;
        $this->container['bill_subcode'] = $data['bill_subcode'] ?? null;
        $this->container['esti_display'] = $data['esti_display'] ?? null;
        $this->container['esti_gb'] = $data['esti_gb'] ?? null;
        $this->container['esti_part'] = $data['esti_part'] ?? null;
        $this->container['esti_sub_nm'] = $data['esti_sub_nm'] ?? null;
        $this->container['esti_sub_yn'] = $data['esti_sub_yn'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['trans_datetime'] === null) {
            $invalidProperties[] = "'trans_datetime' can't be null";
        }
        if ($this->container['bill_date'] === null) {
            $invalidProperties[] = "'bill_date' can't be null";
        }
        if ($this->container['trans_date'] === null) {
            $invalidProperties[] = "'trans_date' can't be null";
        }
        if ($this->container['esti_code'] === null) {
            $invalidProperties[] = "'esti_code' can't be null";
        }
        if ($this->container['esti_inout'] === null) {
            $invalidProperties[] = "'esti_inout' can't be null";
        }
        if ($this->container['bill_memo'] === null) {
            $invalidProperties[] = "'bill_memo' can't be null";
        }
        if ($this->container['bill_bigo'] === null) {
            $invalidProperties[] = "'bill_bigo' can't be null";
        }
        if ($this->container['bill_support_at'] === null) {
            $invalidProperties[] = "'bill_support_at' can't be null";
        }
        if ($this->container['bill_nuri_at'] === null) {
            $invalidProperties[] = "'bill_nuri_at' can't be null";
        }
        if ($this->container['trans_gb'] === null) {
            $invalidProperties[] = "'trans_gb' can't be null";
        }
        if ($this->container['trans_money'] === null) {
            $invalidProperties[] = "'trans_money' can't be null";
        }
        if ($this->container['trans_money_in'] === null) {
            $invalidProperties[] = "'trans_money_in' can't be null";
        }
        if ($this->container['trans_money_out'] === null) {
            $invalidProperties[] = "'trans_money_out' can't be null";
        }
        if ($this->container['trans_remain'] === null) {
            $invalidProperties[] = "'trans_remain' can't be null";
        }
        if ($this->container['trans_memo'] === null) {
            $invalidProperties[] = "'trans_memo' can't be null";
        }
        if ($this->container['setle_mthd'] === null) {
            $invalidProperties[] = "'setle_mthd' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets trans_datetime
     *
     * @return string
     */
    public function getTransDatetime()
    {
        return $this->container['trans_datetime'];
    }

    /**
     * Sets trans_datetime
     *
     * @param string $trans_datetime 거래일시(YYYYMMDD)
     *
     * @return self
     */
    public function setTransDatetime($trans_datetime)
    {
        $this->container['trans_datetime'] = $trans_datetime;

        return $this;
    }

    /**
     * Gets bill_date
     *
     * @return string
     */
    public function getBillDate()
    {
        return $this->container['bill_date'];
    }

    /**
     * Sets bill_date
     *
     * @param string $bill_date 일자(YYYYMMDD)
     *
     * @return self
     */
    public function setBillDate($bill_date)
    {
        $this->container['bill_date'] = $bill_date;

        return $this;
    }

    /**
     * Gets trans_date
     *
     * @return string
     */
    public function getTransDate()
    {
        return $this->container['trans_date'];
    }

    /**
     * Sets trans_date
     *
     * @param string $trans_date 거래일자(YYYYMMDD)
     *
     * @return self
     */
    public function setTransDate($trans_date)
    {
        $this->container['trans_date'] = $trans_date;

        return $this;
    }

    /**
     * Gets esti_code
     *
     * @return string
     */
    public function getEstiCode()
    {
        return $this->container['esti_code'];
    }

    /**
     * Sets esti_code
     *
     * @param string $esti_code 과목코드
     *
     * @return self
     */
    public function setEstiCode($esti_code)
    {
        $this->container['esti_code'] = $esti_code;

        return $this;
    }

    /**
     * Gets esti_inout
     *
     * @return string
     */
    public function getEstiInout()
    {
        return $this->container['esti_inout'];
    }

    /**
     * Sets esti_inout
     *
     * @param string $esti_inout 입출구분(I:세입, O:세출)
     *
     * @return self
     */
    public function setEstiInout($esti_inout)
    {
        $this->container['esti_inout'] = $esti_inout;

        return $this;
    }

    /**
     * Gets bill_memo
     *
     * @return string
     */
    public function getBillMemo()
    {
        return $this->container['bill_memo'];
    }

    /**
     * Sets bill_memo
     *
     * @param string $bill_memo 전표메모(공란)
     *
     * @return self
     */
    public function setBillMemo($bill_memo)
    {
        $this->container['bill_memo'] = $bill_memo;

        return $this;
    }

    /**
     * Gets bill_bigo
     *
     * @return string
     */
    public function getBillBigo()
    {
        return $this->container['bill_bigo'];
    }

    /**
     * Sets bill_bigo
     *
     * @param string $bill_bigo 전표비고
     *
     * @return self
     */
    public function setBillBigo($bill_bigo)
    {
        $this->container['bill_bigo'] = $bill_bigo;

        return $this;
    }

    /**
     * Gets bill_support_at
     *
     * @return string
     */
    public function getBillSupportAt()
    {
        return $this->container['bill_support_at'];
    }

    /**
     * Sets bill_support_at
     *
     * @param string $bill_support_at 보조금여부(Y, N)
     *
     * @return self
     */
    public function setBillSupportAt($bill_support_at)
    {
        $this->container['bill_support_at'] = $bill_support_at;

        return $this;
    }

    /**
     * Gets bill_nuri_at
     *
     * @return string
     */
    public function getBillNuriAt()
    {
        return $this->container['bill_nuri_at'];
    }

    /**
     * Sets bill_nuri_at
     *
     * @param string $bill_nuri_at 누리지원여부(Y, N)
     *
     * @return self
     */
    public function setBillNuriAt($bill_nuri_at)
    {
        $this->container['bill_nuri_at'] = $bill_nuri_at;

        return $this;
    }

    /**
     * Gets trans_gb
     *
     * @return string
     */
    public function getTransGb()
    {
        return $this->container['trans_gb'];
    }

    /**
     * Sets trans_gb
     *
     * @param string $trans_gb 거래내역 입출구분 (I/O)
     *
     * @return self
     */
    public function setTransGb($trans_gb)
    {
        $this->container['trans_gb'] = $trans_gb;

        return $this;
    }

    /**
     * Gets trans_money
     *
     * @return string
     */
    public function getTransMoney()
    {
        return $this->container['trans_money'];
    }

    /**
     * Sets trans_money
     *
     * @param string $trans_money 거래금액
     *
     * @return self
     */
    public function setTransMoney($trans_money)
    {
        $this->container['trans_money'] = $trans_money;

        return $this;
    }

    /**
     * Gets trans_money_in
     *
     * @return string
     */
    public function getTransMoneyIn()
    {
        return $this->container['trans_money_in'];
    }

    /**
     * Sets trans_money_in
     *
     * @param string $trans_money_in 입금액(출금거래시 0)
     *
     * @return self
     */
    public function setTransMoneyIn($trans_money_in)
    {
        $this->container['trans_money_in'] = $trans_money_in;

        return $this;
    }

    /**
     * Gets trans_money_out
     *
     * @return string
     */
    public function getTransMoneyOut()
    {
        return $this->container['trans_money_out'];
    }

    /**
     * Sets trans_money_out
     *
     * @param string $trans_money_out 출금액(입금거래시 0)
     *
     * @return self
     */
    public function setTransMoneyOut($trans_money_out)
    {
        $this->container['trans_money_out'] = $trans_money_out;

        return $this;
    }

    /**
     * Gets trans_remain
     *
     * @return string
     */
    public function getTransRemain()
    {
        return $this->container['trans_remain'];
    }

    /**
     * Sets trans_remain
     *
     * @param string $trans_remain 거래후 잔액
     *
     * @return self
     */
    public function setTransRemain($trans_remain)
    {
        $this->container['trans_remain'] = $trans_remain;

        return $this;
    }

    /**
     * Gets trans_memo
     *
     * @return string
     */
    public function getTransMemo()
    {
        return $this->container['trans_memo'];
    }

    /**
     * Sets trans_memo
     *
     * @param string $trans_memo 거래내용(적요)
     *
     * @return self
     */
    public function setTransMemo($trans_memo)
    {
        $this->container['trans_memo'] = $trans_memo;

        return $this;
    }

    /**
     * Gets setle_mthd
     *
     * @return string
     */
    public function getSetleMthd()
    {
        return $this->container['setle_mthd'];
    }

    /**
     * Sets setle_mthd
     *
     * @param string $setle_mthd 결제방식(100~700)
     *
     * @return self
     */
    public function setSetleMthd($setle_mthd)
    {
        $this->container['setle_mthd'] = $setle_mthd;

        return $this;
    }

    /**
     * Gets voucher
     *
     * @return \OpenAPI\Client\Model\SlipUploadVoucher[]|null
     */
    public function getVoucher()
    {
        return $this->container['voucher'];
    }

    /**
     * Sets voucher
     *
     * @param \OpenAPI\Client\Model\SlipUploadVoucher[]|null $voucher 증빙 목록
     *
     * @return self
     */
    public function setVoucher($voucher)
    {
        $this->container['voucher'] = $voucher;

        return $this;
    }

    /**
     * Gets esti_idx
     *
     * @return string|null
     */
    public function getEstiIdx()
    {
        return $this->container['esti_idx'];
    }

    /**
     * Sets esti_idx
     *
     * @param string|null $esti_idx (slip_delete_upload의 경우 존재함)
     *
     * @return self
     */
    public function setEstiIdx($esti_idx)
    {
        $this->container['esti_idx'] = $esti_idx;

        return $this;
    }

    /**
     * Gets esti_name
     *
     * @return string|null
     */
    public function getEstiName()
    {
        return $this->container['esti_name'];
    }

    /**
     * Sets esti_name
     *
     * @param string|null $esti_name (slip_delete_upload의 경우 존재함)
     *
     * @return self
     */
    public function setEstiName($esti_name)
    {
        $this->container['esti_name'] = $esti_name;

        return $this;
    }

    /**
     * Gets esti_depth
     *
     * @return string|null
     */
    public function getEstiDepth()
    {
        return $this->container['esti_depth'];
    }

    /**
     * Sets esti_depth
     *
     * @param string|null $esti_depth (slip_delete_upload의 경우 존재함)
     *
     * @return self
     */
    public function setEstiDepth($esti_depth)
    {
        $this->container['esti_depth'] = $esti_depth;

        return $this;
    }

    /**
     * Gets esti_name_1
     *
     * @return string|null
     */
    public function getEstiName1()
    {
        return $this->container['esti_name_1'];
    }

    /**
     * Sets esti_name_1
     *
     * @param string|null $esti_name_1 (slip_delete_upload의 경우 존재함)
     *
     * @return self
     */
    public function setEstiName1($esti_name_1)
    {
        $this->container['esti_name_1'] = $esti_name_1;

        return $this;
    }

    /**
     * Gets esti_name_2
     *
     * @return string|null
     */
    public function getEstiName2()
    {
        return $this->container['esti_name_2'];
    }

    /**
     * Sets esti_name_2
     *
     * @param string|null $esti_name_2 (slip_delete_upload의 경우 존재함)
     *
     * @return self
     */
    public function setEstiName2($esti_name_2)
    {
        $this->container['esti_name_2'] = $esti_name_2;

        return $this;
    }

    /**
     * Gets esti_name_3
     *
     * @return string|null
     */
    public function getEstiName3()
    {
        return $this->container['esti_name_3'];
    }

    /**
     * Sets esti_name_3
     *
     * @param string|null $esti_name_3 (slip_delete_upload의 경우 존재함)
     *
     * @return self
     */
    public function setEstiName3($esti_name_3)
    {
        $this->container['esti_name_3'] = $esti_name_3;

        return $this;
    }

    /**
     * Gets bill_subcode
     *
     * @return string|null
     */
    public function getBillSubcode()
    {
        return $this->container['bill_subcode'];
    }

    /**
     * Sets bill_subcode
     *
     * @param string|null $bill_subcode (slip_delete_upload의 경우 존재함)
     *
     * @return self
     */
    public function setBillSubcode($bill_subcode)
    {
        $this->container['bill_subcode'] = $bill_subcode;

        return $this;
    }

    /**
     * Gets esti_display
     *
     * @return string|null
     */
    public function getEstiDisplay()
    {
        return $this->container['esti_display'];
    }

    /**
     * Sets esti_display
     *
     * @param string|null $esti_display (slip_delete_upload의 경우 존재함)
     *
     * @return self
     */
    public function setEstiDisplay($esti_display)
    {
        $this->container['esti_display'] = $esti_display;

        return $this;
    }

    /**
     * Gets esti_gb
     *
     * @return string|null
     */
    public function getEstiGb()
    {
        return $this->container['esti_gb'];
    }

    /**
     * Sets esti_gb
     *
     * @param string|null $esti_gb (slip_delete_upload의 경우 존재함)
     *
     * @return self
     */
    public function setEstiGb($esti_gb)
    {
        $this->container['esti_gb'] = $esti_gb;

        return $this;
    }

    /**
     * Gets esti_part
     *
     * @return string|null
     */
    public function getEstiPart()
    {
        return $this->container['esti_part'];
    }

    /**
     * Sets esti_part
     *
     * @param string|null $esti_part (slip_delete_upload의 경우 존재함)
     *
     * @return self
     */
    public function setEstiPart($esti_part)
    {
        $this->container['esti_part'] = $esti_part;

        return $this;
    }

    /**
     * Gets esti_sub_nm
     *
     * @return string|null
     */
    public function getEstiSubNm()
    {
        return $this->container['esti_sub_nm'];
    }

    /**
     * Sets esti_sub_nm
     *
     * @param string|null $esti_sub_nm (slip_delete_upload의 경우 존재함)
     *
     * @return self
     */
    public function setEstiSubNm($esti_sub_nm)
    {
        $this->container['esti_sub_nm'] = $esti_sub_nm;

        return $this;
    }

    /**
     * Gets esti_sub_yn
     *
     * @return string|null
     */
    public function getEstiSubYn()
    {
        return $this->container['esti_sub_yn'];
    }

    /**
     * Sets esti_sub_yn
     *
     * @param string|null $esti_sub_yn (slip_delete_upload의 경우 존재함)
     *
     * @return self
     */
    public function setEstiSubYn($esti_sub_yn)
    {
        $this->container['esti_sub_yn'] = $esti_sub_yn;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


