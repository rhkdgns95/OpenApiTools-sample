<?php
/**
 * SlipUploadMonthly
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 뱅크다K 웹앱 REST API
 *
 * 뱅크다K 웹앱 REST API : 관리자, 장부사, 고객사
 *
 * The version of the OpenAPI document: 0.5.2
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * SlipUploadMonthly Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class SlipUploadMonthly implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'SlipUploadMonthly';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'bcnc_nm' => 'string',
        'cr_tmm_ocur_amt' => 'string',
        'acct_number' => 'string',
        'acc_nm' => 'string',
        'remk' => 'string',
        'fdsrc_nm' => 'string',
        'bsns_nm' => 'string',
        'acct_mngt_nm' => 'string',
        'dfrt_de' => 'string',
        'dr_tmm_ocur_amt' => 'string',
        'opnt_acc_nm' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'bcnc_nm' => null,
        'cr_tmm_ocur_amt' => null,
        'acct_number' => null,
        'acc_nm' => null,
        'remk' => null,
        'fdsrc_nm' => null,
        'bsns_nm' => null,
        'acct_mngt_nm' => null,
        'dfrt_de' => null,
        'dr_tmm_ocur_amt' => null,
        'opnt_acc_nm' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'bcnc_nm' => 'BCNC_NM',
        'cr_tmm_ocur_amt' => 'CR_TMM_OCUR_AMT',
        'acct_number' => 'ACCT_NUMBER',
        'acc_nm' => 'ACC_NM',
        'remk' => 'REMK',
        'fdsrc_nm' => 'FDSRC_NM',
        'bsns_nm' => 'BSNS_NM',
        'acct_mngt_nm' => 'ACCT_MNGT_NM',
        'dfrt_de' => 'DFRT_DE',
        'dr_tmm_ocur_amt' => 'DR_TMM_OCUR_AMT',
        'opnt_acc_nm' => 'OPNT_ACC_NM'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'bcnc_nm' => 'setBcncNm',
        'cr_tmm_ocur_amt' => 'setCrTmmOcurAmt',
        'acct_number' => 'setAcctNumber',
        'acc_nm' => 'setAccNm',
        'remk' => 'setRemk',
        'fdsrc_nm' => 'setFdsrcNm',
        'bsns_nm' => 'setBsnsNm',
        'acct_mngt_nm' => 'setAcctMngtNm',
        'dfrt_de' => 'setDfrtDe',
        'dr_tmm_ocur_amt' => 'setDrTmmOcurAmt',
        'opnt_acc_nm' => 'setOpntAccNm'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'bcnc_nm' => 'getBcncNm',
        'cr_tmm_ocur_amt' => 'getCrTmmOcurAmt',
        'acct_number' => 'getAcctNumber',
        'acc_nm' => 'getAccNm',
        'remk' => 'getRemk',
        'fdsrc_nm' => 'getFdsrcNm',
        'bsns_nm' => 'getBsnsNm',
        'acct_mngt_nm' => 'getAcctMngtNm',
        'dfrt_de' => 'getDfrtDe',
        'dr_tmm_ocur_amt' => 'getDrTmmOcurAmt',
        'opnt_acc_nm' => 'getOpntAccNm'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['bcnc_nm'] = $data['bcnc_nm'] ?? null;
        $this->container['cr_tmm_ocur_amt'] = $data['cr_tmm_ocur_amt'] ?? null;
        $this->container['acct_number'] = $data['acct_number'] ?? null;
        $this->container['acc_nm'] = $data['acc_nm'] ?? null;
        $this->container['remk'] = $data['remk'] ?? null;
        $this->container['fdsrc_nm'] = $data['fdsrc_nm'] ?? null;
        $this->container['bsns_nm'] = $data['bsns_nm'] ?? null;
        $this->container['acct_mngt_nm'] = $data['acct_mngt_nm'] ?? null;
        $this->container['dfrt_de'] = $data['dfrt_de'] ?? null;
        $this->container['dr_tmm_ocur_amt'] = $data['dr_tmm_ocur_amt'] ?? null;
        $this->container['opnt_acc_nm'] = $data['opnt_acc_nm'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['bcnc_nm'] === null) {
            $invalidProperties[] = "'bcnc_nm' can't be null";
        }
        if ($this->container['cr_tmm_ocur_amt'] === null) {
            $invalidProperties[] = "'cr_tmm_ocur_amt' can't be null";
        }
        if ($this->container['acct_number'] === null) {
            $invalidProperties[] = "'acct_number' can't be null";
        }
        if ($this->container['acc_nm'] === null) {
            $invalidProperties[] = "'acc_nm' can't be null";
        }
        if ($this->container['remk'] === null) {
            $invalidProperties[] = "'remk' can't be null";
        }
        if ($this->container['fdsrc_nm'] === null) {
            $invalidProperties[] = "'fdsrc_nm' can't be null";
        }
        if ($this->container['bsns_nm'] === null) {
            $invalidProperties[] = "'bsns_nm' can't be null";
        }
        if ($this->container['acct_mngt_nm'] === null) {
            $invalidProperties[] = "'acct_mngt_nm' can't be null";
        }
        if ($this->container['dfrt_de'] === null) {
            $invalidProperties[] = "'dfrt_de' can't be null";
        }
        if ($this->container['dr_tmm_ocur_amt'] === null) {
            $invalidProperties[] = "'dr_tmm_ocur_amt' can't be null";
        }
        if ($this->container['opnt_acc_nm'] === null) {
            $invalidProperties[] = "'opnt_acc_nm' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets bcnc_nm
     *
     * @return string
     */
    public function getBcncNm()
    {
        return $this->container['bcnc_nm'];
    }

    /**
     * Sets bcnc_nm
     *
     * @param string $bcnc_nm bcnc_nm
     *
     * @return self
     */
    public function setBcncNm($bcnc_nm)
    {
        $this->container['bcnc_nm'] = $bcnc_nm;

        return $this;
    }

    /**
     * Gets cr_tmm_ocur_amt
     *
     * @return string
     */
    public function getCrTmmOcurAmt()
    {
        return $this->container['cr_tmm_ocur_amt'];
    }

    /**
     * Sets cr_tmm_ocur_amt
     *
     * @param string $cr_tmm_ocur_amt cr_tmm_ocur_amt
     *
     * @return self
     */
    public function setCrTmmOcurAmt($cr_tmm_ocur_amt)
    {
        $this->container['cr_tmm_ocur_amt'] = $cr_tmm_ocur_amt;

        return $this;
    }

    /**
     * Gets acct_number
     *
     * @return string
     */
    public function getAcctNumber()
    {
        return $this->container['acct_number'];
    }

    /**
     * Sets acct_number
     *
     * @param string $acct_number acct_number
     *
     * @return self
     */
    public function setAcctNumber($acct_number)
    {
        $this->container['acct_number'] = $acct_number;

        return $this;
    }

    /**
     * Gets acc_nm
     *
     * @return string
     */
    public function getAccNm()
    {
        return $this->container['acc_nm'];
    }

    /**
     * Sets acc_nm
     *
     * @param string $acc_nm acc_nm
     *
     * @return self
     */
    public function setAccNm($acc_nm)
    {
        $this->container['acc_nm'] = $acc_nm;

        return $this;
    }

    /**
     * Gets remk
     *
     * @return string
     */
    public function getRemk()
    {
        return $this->container['remk'];
    }

    /**
     * Sets remk
     *
     * @param string $remk remk
     *
     * @return self
     */
    public function setRemk($remk)
    {
        $this->container['remk'] = $remk;

        return $this;
    }

    /**
     * Gets fdsrc_nm
     *
     * @return string
     */
    public function getFdsrcNm()
    {
        return $this->container['fdsrc_nm'];
    }

    /**
     * Sets fdsrc_nm
     *
     * @param string $fdsrc_nm fdsrc_nm
     *
     * @return self
     */
    public function setFdsrcNm($fdsrc_nm)
    {
        $this->container['fdsrc_nm'] = $fdsrc_nm;

        return $this;
    }

    /**
     * Gets bsns_nm
     *
     * @return string
     */
    public function getBsnsNm()
    {
        return $this->container['bsns_nm'];
    }

    /**
     * Sets bsns_nm
     *
     * @param string $bsns_nm bsns_nm
     *
     * @return self
     */
    public function setBsnsNm($bsns_nm)
    {
        $this->container['bsns_nm'] = $bsns_nm;

        return $this;
    }

    /**
     * Gets acct_mngt_nm
     *
     * @return string
     */
    public function getAcctMngtNm()
    {
        return $this->container['acct_mngt_nm'];
    }

    /**
     * Sets acct_mngt_nm
     *
     * @param string $acct_mngt_nm acct_mngt_nm
     *
     * @return self
     */
    public function setAcctMngtNm($acct_mngt_nm)
    {
        $this->container['acct_mngt_nm'] = $acct_mngt_nm;

        return $this;
    }

    /**
     * Gets dfrt_de
     *
     * @return string
     */
    public function getDfrtDe()
    {
        return $this->container['dfrt_de'];
    }

    /**
     * Sets dfrt_de
     *
     * @param string $dfrt_de dfrt_de
     *
     * @return self
     */
    public function setDfrtDe($dfrt_de)
    {
        $this->container['dfrt_de'] = $dfrt_de;

        return $this;
    }

    /**
     * Gets dr_tmm_ocur_amt
     *
     * @return string
     */
    public function getDrTmmOcurAmt()
    {
        return $this->container['dr_tmm_ocur_amt'];
    }

    /**
     * Sets dr_tmm_ocur_amt
     *
     * @param string $dr_tmm_ocur_amt dr_tmm_ocur_amt
     *
     * @return self
     */
    public function setDrTmmOcurAmt($dr_tmm_ocur_amt)
    {
        $this->container['dr_tmm_ocur_amt'] = $dr_tmm_ocur_amt;

        return $this;
    }

    /**
     * Gets opnt_acc_nm
     *
     * @return string
     */
    public function getOpntAccNm()
    {
        return $this->container['opnt_acc_nm'];
    }

    /**
     * Sets opnt_acc_nm
     *
     * @param string $opnt_acc_nm opnt_acc_nm
     *
     * @return self
     */
    public function setOpntAccNm($opnt_acc_nm)
    {
        $this->container['opnt_acc_nm'] = $opnt_acc_nm;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


