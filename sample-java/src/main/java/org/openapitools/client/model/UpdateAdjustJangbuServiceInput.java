/*
 * 뱅크다K 웹앱 REST API
 * 뱅크다K 웹앱 REST API : 관리자, 장부사, 고객사
 *
 * The version of the OpenAPI document: 0.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * UpdateAdjustJangbuServiceInput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-18T15:11:40.792001100+09:00[Asia/Seoul]")
public class UpdateAdjustJangbuServiceInput {
  public static final String SERIALIZED_NAME_APPLY_USER_COUNT = "applyUserCount";
  @SerializedName(SERIALIZED_NAME_APPLY_USER_COUNT)
  private BigDecimal applyUserCount;

  public static final String SERIALIZED_NAME_DISCOUNT_UNIT_PRICE = "discountUnitPrice";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_UNIT_PRICE)
  private BigDecimal discountUnitPrice;

  public static final String SERIALIZED_NAME_MEMO = "memo";
  @SerializedName(SERIALIZED_NAME_MEMO)
  private String memo;


  public UpdateAdjustJangbuServiceInput applyUserCount(BigDecimal applyUserCount) {
    
    this.applyUserCount = applyUserCount;
    return this;
  }

   /**
   * 정산대상자 수
   * @return applyUserCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "정산대상자 수")

  public BigDecimal getApplyUserCount() {
    return applyUserCount;
  }


  public void setApplyUserCount(BigDecimal applyUserCount) {
    this.applyUserCount = applyUserCount;
  }


  public UpdateAdjustJangbuServiceInput discountUnitPrice(BigDecimal discountUnitPrice) {
    
    this.discountUnitPrice = discountUnitPrice;
    return this;
  }

   /**
   * 할인적용된 단가
   * @return discountUnitPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "할인적용된 단가")

  public BigDecimal getDiscountUnitPrice() {
    return discountUnitPrice;
  }


  public void setDiscountUnitPrice(BigDecimal discountUnitPrice) {
    this.discountUnitPrice = discountUnitPrice;
  }


  public UpdateAdjustJangbuServiceInput memo(String memo) {
    
    this.memo = memo;
    return this;
  }

   /**
   * 메모 (할인책정사유 등)
   * @return memo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "메모 (할인책정사유 등)")

  public String getMemo() {
    return memo;
  }


  public void setMemo(String memo) {
    this.memo = memo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateAdjustJangbuServiceInput updateAdjustJangbuServiceInput = (UpdateAdjustJangbuServiceInput) o;
    return Objects.equals(this.applyUserCount, updateAdjustJangbuServiceInput.applyUserCount) &&
        Objects.equals(this.discountUnitPrice, updateAdjustJangbuServiceInput.discountUnitPrice) &&
        Objects.equals(this.memo, updateAdjustJangbuServiceInput.memo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applyUserCount, discountUnitPrice, memo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateAdjustJangbuServiceInput {\n");
    sb.append("    applyUserCount: ").append(toIndentedString(applyUserCount)).append("\n");
    sb.append("    discountUnitPrice: ").append(toIndentedString(discountUnitPrice)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

