/*
 * 뱅크다K 웹앱 REST API
 * 뱅크다K 웹앱 REST API : 관리자, 장부사, 고객사
 *
 * The version of the OpenAPI document: 0.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * FindMemberInput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-18T15:11:40.792001100+09:00[Asia/Seoul]")
public class FindMemberInput {
  /**
   * 계정찾기 타입 (아이디의 경우:id, 패스워드의 경우:password)
   */
  @JsonAdapter(FindTypeEnum.Adapter.class)
  public enum FindTypeEnum {
    ID("id"),
    
    PASSWORD("password");

    private String value;

    FindTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FindTypeEnum fromValue(String value) {
      for (FindTypeEnum b : FindTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FindTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FindTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FindTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FindTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_FIND_TYPE = "findType";
  @SerializedName(SERIALIZED_NAME_FIND_TYPE)
  private FindTypeEnum findType;

  public static final String SERIALIZED_NAME_LOGIN_ID = "loginId";
  @SerializedName(SERIALIZED_NAME_LOGIN_ID)
  private String loginId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;


  public FindMemberInput findType(FindTypeEnum findType) {
    
    this.findType = findType;
    return this;
  }

   /**
   * 계정찾기 타입 (아이디의 경우:id, 패스워드의 경우:password)
   * @return findType
  **/
  @ApiModelProperty(required = true, value = "계정찾기 타입 (아이디의 경우:id, 패스워드의 경우:password)")

  public FindTypeEnum getFindType() {
    return findType;
  }


  public void setFindType(FindTypeEnum findType) {
    this.findType = findType;
  }


  public FindMemberInput loginId(String loginId) {
    
    this.loginId = loginId;
    return this;
  }

   /**
   * (비밀번호 찾기의 경우에만 필수) 로그인 아이디
   * @return loginId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "(비밀번호 찾기의 경우에만 필수) 로그인 아이디")

  public String getLoginId() {
    return loginId;
  }


  public void setLoginId(String loginId) {
    this.loginId = loginId;
  }


  public FindMemberInput name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * (아이디 찾기의 경우에 필수) 이름
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "(아이디 찾기의 경우에 필수) 이름")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public FindMemberInput email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * (아이디 찾기 - 이메일로 찾을 경우에 필수) 이메일
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "(아이디 찾기 - 이메일로 찾을 경우에 필수) 이메일")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FindMemberInput findMemberInput = (FindMemberInput) o;
    return Objects.equals(this.findType, findMemberInput.findType) &&
        Objects.equals(this.loginId, findMemberInput.loginId) &&
        Objects.equals(this.name, findMemberInput.name) &&
        Objects.equals(this.email, findMemberInput.email);
  }

  @Override
  public int hashCode() {
    return Objects.hash(findType, loginId, name, email);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FindMemberInput {\n");
    sb.append("    findType: ").append(toIndentedString(findType)).append("\n");
    sb.append("    loginId: ").append(toIndentedString(loginId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

