/*
 * 뱅크다K 웹앱 REST API
 * 뱅크다K 웹앱 REST API : 관리자, 장부사, 고객사
 *
 * The version of the OpenAPI document: 0.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * RegisterCustomerInput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-18T15:11:40.792001100+09:00[Asia/Seoul]")
public class RegisterCustomerInput {
  /**
   * 사용자 유형
   */
  @JsonAdapter(UserLevelEnum.Adapter.class)
  public enum UserLevelEnum {
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    UserLevelEnum(BigDecimal value) {
      this.value = value;
    }

    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static UserLevelEnum fromValue(BigDecimal value) {
      for (UserLevelEnum b : UserLevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<UserLevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UserLevelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public UserLevelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return UserLevelEnum.fromValue(new BigDecimal(value));
      }
    }
  }

  public static final String SERIALIZED_NAME_USER_LEVEL = "userLevel";
  @SerializedName(SERIALIZED_NAME_USER_LEVEL)
  private UserLevelEnum userLevel;

  public static final String SERIALIZED_NAME_JANGBU_ID = "jangbuId";
  @SerializedName(SERIALIZED_NAME_JANGBU_ID)
  private BigDecimal jangbuId;

  public static final String SERIALIZED_NAME_LOGIN_ID = "loginId";
  @SerializedName(SERIALIZED_NAME_LOGIN_ID)
  private String loginId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CEO_NAME = "ceoName";
  @SerializedName(SERIALIZED_NAME_CEO_NAME)
  private String ceoName;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_ROLE_GROUP_CODE = "roleGroupCode";
  @SerializedName(SERIALIZED_NAME_ROLE_GROUP_CODE)
  private String roleGroupCode;

  public static final String SERIALIZED_NAME_SERVICE_ID = "serviceId";
  @SerializedName(SERIALIZED_NAME_SERVICE_ID)
  private BigDecimal serviceId;


  public RegisterCustomerInput userLevel(UserLevelEnum userLevel) {
    
    this.userLevel = userLevel;
    return this;
  }

   /**
   * 사용자 유형
   * @return userLevel
  **/
  @ApiModelProperty(example = "1", required = true, value = "사용자 유형")

  public UserLevelEnum getUserLevel() {
    return userLevel;
  }


  public void setUserLevel(UserLevelEnum userLevel) {
    this.userLevel = userLevel;
  }


  public RegisterCustomerInput jangbuId(BigDecimal jangbuId) {
    
    this.jangbuId = jangbuId;
    return this;
  }

   /**
   * 장부사 순번
   * @return jangbuId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "장부사 순번")

  public BigDecimal getJangbuId() {
    return jangbuId;
  }


  public void setJangbuId(BigDecimal jangbuId) {
    this.jangbuId = jangbuId;
  }


  public RegisterCustomerInput loginId(String loginId) {
    
    this.loginId = loginId;
    return this;
  }

   /**
   * 로그인 아이디
   * @return loginId
  **/
  @ApiModelProperty(required = true, value = "로그인 아이디")

  public String getLoginId() {
    return loginId;
  }


  public void setLoginId(String loginId) {
    this.loginId = loginId;
  }


  public RegisterCustomerInput name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * 이름
   * @return name
  **/
  @ApiModelProperty(required = true, value = "이름")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public RegisterCustomerInput ceoName(String ceoName) {
    
    this.ceoName = ceoName;
    return this;
  }

   /**
   * 대표자명
   * @return ceoName
  **/
  @ApiModelProperty(required = true, value = "대표자명")

  public String getCeoName() {
    return ceoName;
  }


  public void setCeoName(String ceoName) {
    this.ceoName = ceoName;
  }


  public RegisterCustomerInput email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * 이메일
   * @return email
  **/
  @ApiModelProperty(required = true, value = "이메일")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public RegisterCustomerInput phone(String phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * 휴대폰번호
   * @return phone
  **/
  @ApiModelProperty(required = true, value = "휴대폰번호")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    this.phone = phone;
  }


  public RegisterCustomerInput roleGroupCode(String roleGroupCode) {
    
    this.roleGroupCode = roleGroupCode;
    return this;
  }

   /**
   * 권한그룹코드
   * @return roleGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "권한그룹코드")

  public String getRoleGroupCode() {
    return roleGroupCode;
  }


  public void setRoleGroupCode(String roleGroupCode) {
    this.roleGroupCode = roleGroupCode;
  }


  public RegisterCustomerInput serviceId(BigDecimal serviceId) {
    
    this.serviceId = serviceId;
    return this;
  }

   /**
   * 서비스 순번 (장부사 및 관리자 회원의 경우에는 생략)
   * @return serviceId
  **/
  @ApiModelProperty(required = true, value = "서비스 순번 (장부사 및 관리자 회원의 경우에는 생략)")

  public BigDecimal getServiceId() {
    return serviceId;
  }


  public void setServiceId(BigDecimal serviceId) {
    this.serviceId = serviceId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegisterCustomerInput registerCustomerInput = (RegisterCustomerInput) o;
    return Objects.equals(this.userLevel, registerCustomerInput.userLevel) &&
        Objects.equals(this.jangbuId, registerCustomerInput.jangbuId) &&
        Objects.equals(this.loginId, registerCustomerInput.loginId) &&
        Objects.equals(this.name, registerCustomerInput.name) &&
        Objects.equals(this.ceoName, registerCustomerInput.ceoName) &&
        Objects.equals(this.email, registerCustomerInput.email) &&
        Objects.equals(this.phone, registerCustomerInput.phone) &&
        Objects.equals(this.roleGroupCode, registerCustomerInput.roleGroupCode) &&
        Objects.equals(this.serviceId, registerCustomerInput.serviceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userLevel, jangbuId, loginId, name, ceoName, email, phone, roleGroupCode, serviceId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegisterCustomerInput {\n");
    sb.append("    userLevel: ").append(toIndentedString(userLevel)).append("\n");
    sb.append("    jangbuId: ").append(toIndentedString(jangbuId)).append("\n");
    sb.append("    loginId: ").append(toIndentedString(loginId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ceoName: ").append(toIndentedString(ceoName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    roleGroupCode: ").append(toIndentedString(roleGroupCode)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

