/*
 * 뱅크다K 웹앱 REST API
 * 뱅크다K 웹앱 REST API : 관리자, 장부사, 고객사
 *
 * The version of the OpenAPI document: 0.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * ApiLogDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-18T15:11:40.792001100+09:00[Asia/Seoul]")
public class ApiLogDetail {
  public static final String SERIALIZED_NAME_API_ID = "apiId";
  @SerializedName(SERIALIZED_NAME_API_ID)
  private BigDecimal apiId;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_METHOD = "method";
  @SerializedName(SERIALIZED_NAME_METHOD)
  private String method;

  public static final String SERIALIZED_NAME_SERVICE_NAME = "serviceName";
  @SerializedName(SERIALIZED_NAME_SERVICE_NAME)
  private String serviceName;

  public static final String SERIALIZED_NAME_USER_TYPE = "userType";
  @SerializedName(SERIALIZED_NAME_USER_TYPE)
  private String userType;

  public static final String SERIALIZED_NAME_WORK_REQUEST_TYPE = "workRequestType";
  @SerializedName(SERIALIZED_NAME_WORK_REQUEST_TYPE)
  private String workRequestType;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_IN_DATA = "inData";
  @SerializedName(SERIALIZED_NAME_IN_DATA)
  private String inData;

  public static final String SERIALIZED_NAME_OUT_DATA = "outData";
  @SerializedName(SERIALIZED_NAME_OUT_DATA)
  private String outData;

  public static final String SERIALIZED_NAME_IN_DATA_PATH = "inDataPath";
  @SerializedName(SERIALIZED_NAME_IN_DATA_PATH)
  private String inDataPath;

  public static final String SERIALIZED_NAME_OUT_DATA_PATH = "outDataPath";
  @SerializedName(SERIALIZED_NAME_OUT_DATA_PATH)
  private String outDataPath;


  public ApiLogDetail apiId(BigDecimal apiId) {
    
    this.apiId = apiId;
    return this;
  }

   /**
   * api로그 번호
   * @return apiId
  **/
  @ApiModelProperty(required = true, value = "api로그 번호")

  public BigDecimal getApiId() {
    return apiId;
  }


  public void setApiId(BigDecimal apiId) {
    this.apiId = apiId;
  }


  public ApiLogDetail version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * api 버전
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "api 버전")

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public ApiLogDetail method(String method) {
    
    this.method = method;
    return this;
  }

   /**
   * api 요청 method
   * @return method
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "api 요청 method")

  public String getMethod() {
    return method;
  }


  public void setMethod(String method) {
    this.method = method;
  }


  public ApiLogDetail serviceName(String serviceName) {
    
    this.serviceName = serviceName;
    return this;
  }

   /**
   * api 요청 서비스
   * @return serviceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "api 요청 서비스")

  public String getServiceName() {
    return serviceName;
  }


  public void setServiceName(String serviceName) {
    this.serviceName = serviceName;
  }


  public ApiLogDetail userType(String userType) {
    
    this.userType = userType;
    return this;
  }

   /**
   * api 요청 주체
   * @return userType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "api 요청 주체")

  public String getUserType() {
    return userType;
  }


  public void setUserType(String userType) {
    this.userType = userType;
  }


  public ApiLogDetail workRequestType(String workRequestType) {
    
    this.workRequestType = workRequestType;
    return this;
  }

   /**
   * 데이터등록요청 타입
   * @return workRequestType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "데이터등록요청 타입")

  public String getWorkRequestType() {
    return workRequestType;
  }


  public void setWorkRequestType(String workRequestType) {
    this.workRequestType = workRequestType;
  }


  public ApiLogDetail description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * api 요청 결과
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "api 요청 결과")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ApiLogDetail inData(String inData) {
    
    this.inData = inData;
    return this;
  }

   /**
   * In data
   * @return inData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "In data")

  public String getInData() {
    return inData;
  }


  public void setInData(String inData) {
    this.inData = inData;
  }


  public ApiLogDetail outData(String outData) {
    
    this.outData = outData;
    return this;
  }

   /**
   * Out data
   * @return outData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Out data")

  public String getOutData() {
    return outData;
  }


  public void setOutData(String outData) {
    this.outData = outData;
  }


  public ApiLogDetail inDataPath(String inDataPath) {
    
    this.inDataPath = inDataPath;
    return this;
  }

   /**
   * In data s3 데이터
   * @return inDataPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "In data s3 데이터")

  public String getInDataPath() {
    return inDataPath;
  }


  public void setInDataPath(String inDataPath) {
    this.inDataPath = inDataPath;
  }


  public ApiLogDetail outDataPath(String outDataPath) {
    
    this.outDataPath = outDataPath;
    return this;
  }

   /**
   * Out data s3 데이터
   * @return outDataPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Out data s3 데이터")

  public String getOutDataPath() {
    return outDataPath;
  }


  public void setOutDataPath(String outDataPath) {
    this.outDataPath = outDataPath;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiLogDetail apiLogDetail = (ApiLogDetail) o;
    return Objects.equals(this.apiId, apiLogDetail.apiId) &&
        Objects.equals(this.version, apiLogDetail.version) &&
        Objects.equals(this.method, apiLogDetail.method) &&
        Objects.equals(this.serviceName, apiLogDetail.serviceName) &&
        Objects.equals(this.userType, apiLogDetail.userType) &&
        Objects.equals(this.workRequestType, apiLogDetail.workRequestType) &&
        Objects.equals(this.description, apiLogDetail.description) &&
        Objects.equals(this.inData, apiLogDetail.inData) &&
        Objects.equals(this.outData, apiLogDetail.outData) &&
        Objects.equals(this.inDataPath, apiLogDetail.inDataPath) &&
        Objects.equals(this.outDataPath, apiLogDetail.outDataPath);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiId, version, method, serviceName, userType, workRequestType, description, inData, outData, inDataPath, outDataPath);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiLogDetail {\n");
    sb.append("    apiId: ").append(toIndentedString(apiId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
    sb.append("    workRequestType: ").append(toIndentedString(workRequestType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    inData: ").append(toIndentedString(inData)).append("\n");
    sb.append("    outData: ").append(toIndentedString(outData)).append("\n");
    sb.append("    inDataPath: ").append(toIndentedString(inDataPath)).append("\n");
    sb.append("    outDataPath: ").append(toIndentedString(outDataPath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

