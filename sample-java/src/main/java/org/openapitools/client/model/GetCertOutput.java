/*
 * 뱅크다K 웹앱 REST API
 * 뱅크다K 웹앱 REST API : 관리자, 장부사, 고객사
 *
 * The version of the OpenAPI document: 0.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * GetCertOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-18T15:11:40.792001100+09:00[Asia/Seoul]")
public class GetCertOutput {
  public static final String SERIALIZED_NAME_CERT = "cert";
  @SerializedName(SERIALIZED_NAME_CERT)
  private String cert;

  public static final String SERIALIZED_NAME_PASSPHRASE = "passphrase";
  @SerializedName(SERIALIZED_NAME_PASSPHRASE)
  private String passphrase;

  public static final String SERIALIZED_NAME_PRIVATE_KEY = "privateKey";
  @SerializedName(SERIALIZED_NAME_PRIVATE_KEY)
  private String privateKey;

  public static final String SERIALIZED_NAME_EXTRA = "extra";
  @SerializedName(SERIALIZED_NAME_EXTRA)
  private Object extra;


  public GetCertOutput cert(String cert) {
    
    this.cert = cert;
    return this;
  }

   /**
   * 인증서 HEX
   * @return cert
  **/
  @ApiModelProperty(required = true, value = "인증서 HEX")

  public String getCert() {
    return cert;
  }


  public void setCert(String cert) {
    this.cert = cert;
  }


  public GetCertOutput passphrase(String passphrase) {
    
    this.passphrase = passphrase;
    return this;
  }

   /**
   * 비밀번호
   * @return passphrase
  **/
  @ApiModelProperty(required = true, value = "비밀번호")

  public String getPassphrase() {
    return passphrase;
  }


  public void setPassphrase(String passphrase) {
    this.passphrase = passphrase;
  }


  public GetCertOutput privateKey(String privateKey) {
    
    this.privateKey = privateKey;
    return this;
  }

   /**
   * 개인키 HEX
   * @return privateKey
  **/
  @ApiModelProperty(required = true, value = "개인키 HEX")

  public String getPrivateKey() {
    return privateKey;
  }


  public void setPrivateKey(String privateKey) {
    this.privateKey = privateKey;
  }


  public GetCertOutput extra(Object extra) {
    
    this.extra = extra;
    return this;
  }

   /**
   * 확장정보
   * @return extra
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "확장정보")

  public Object getExtra() {
    return extra;
  }


  public void setExtra(Object extra) {
    this.extra = extra;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCertOutput getCertOutput = (GetCertOutput) o;
    return Objects.equals(this.cert, getCertOutput.cert) &&
        Objects.equals(this.passphrase, getCertOutput.passphrase) &&
        Objects.equals(this.privateKey, getCertOutput.privateKey) &&
        Objects.equals(this.extra, getCertOutput.extra);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cert, passphrase, privateKey, extra);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCertOutput {\n");
    sb.append("    cert: ").append(toIndentedString(cert)).append("\n");
    sb.append("    passphrase: ").append(toIndentedString(passphrase)).append("\n");
    sb.append("    privateKey: ").append(toIndentedString(privateKey)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

