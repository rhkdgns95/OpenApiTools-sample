/*
 * 뱅크다K 웹앱 REST API
 * 뱅크다K 웹앱 REST API : 관리자, 장부사, 고객사
 *
 * The version of the OpenAPI document: 0.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.openapitools.client.model.Jangbu;
import org.openapitools.client.model.User;
import org.openapitools.client.model.UserServiceType;

/**
 * UserService
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-18T15:11:40.792001100+09:00[Asia/Seoul]")
public class UserService {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private BigDecimal id;

  public static final String SERIALIZED_NAME_SERVICE_ID = "serviceId";
  @SerializedName(SERIALIZED_NAME_SERVICE_ID)
  private BigDecimal serviceId;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private UserServiceType type;

  public static final String SERIALIZED_NAME_JANGBU = "jangbu";
  @SerializedName(SERIALIZED_NAME_JANGBU)
  private Jangbu jangbu;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private User user;


  public UserService id(BigDecimal id) {
    
    this.id = id;
    return this;
  }

   /**
   * 사용자서비스적용번호
   * @return id
  **/
  @ApiModelProperty(required = true, value = "사용자서비스적용번호")

  public BigDecimal getId() {
    return id;
  }


  public void setId(BigDecimal id) {
    this.id = id;
  }


  public UserService serviceId(BigDecimal serviceId) {
    
    this.serviceId = serviceId;
    return this;
  }

   /**
   * 서비스 순번
   * @return serviceId
  **/
  @ApiModelProperty(required = true, value = "서비스 순번")

  public BigDecimal getServiceId() {
    return serviceId;
  }


  public void setServiceId(BigDecimal serviceId) {
    this.serviceId = serviceId;
  }


  public UserService type(UserServiceType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")

  public UserServiceType getType() {
    return type;
  }


  public void setType(UserServiceType type) {
    this.type = type;
  }


  public UserService jangbu(Jangbu jangbu) {
    
    this.jangbu = jangbu;
    return this;
  }

   /**
   * 장부사
   * @return jangbu
  **/
  @ApiModelProperty(required = true, value = "장부사")

  public Jangbu getJangbu() {
    return jangbu;
  }


  public void setJangbu(Jangbu jangbu) {
    this.jangbu = jangbu;
  }


  public UserService user(User user) {
    
    this.user = user;
    return this;
  }

   /**
   * 유저
   * @return user
  **/
  @ApiModelProperty(required = true, value = "유저")

  public User getUser() {
    return user;
  }


  public void setUser(User user) {
    this.user = user;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserService userService = (UserService) o;
    return Objects.equals(this.id, userService.id) &&
        Objects.equals(this.serviceId, userService.serviceId) &&
        Objects.equals(this.type, userService.type) &&
        Objects.equals(this.jangbu, userService.jangbu) &&
        Objects.equals(this.user, userService.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, serviceId, type, jangbu, user);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserService {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    jangbu: ").append(toIndentedString(jangbu)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

