/* tslint:disable */
/* eslint-disable */
/**
 * 뱅크다K 웹앱 REST API
 * 뱅크다K 웹앱 REST API : 관리자, 장부사, 고객사
 *
 * The version of the OpenAPI document: 0.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ChargeJangbuPartnership,
    ChargeJangbuPartnershipFromJSON,
    ChargeJangbuPartnershipFromJSONTyped,
    ChargeJangbuPartnershipToJSON,
} from './';

/**
 * 
 * @export
 * @interface Jangbu
 */
export interface Jangbu {
    /**
     * 장부사번호
     * @type {number}
     * @memberof Jangbu
     */
    id: number;
    /**
     * 장부사 아이디
     * @type {string}
     * @memberof Jangbu
     */
    repId: string;
    /**
     * 유효성여부
     * @type {boolean}
     * @memberof Jangbu
     */
    active: boolean;
    /**
     * 장부사명
     * @type {string}
     * @memberof Jangbu
     */
    name: string;
    /**
     * 과금 이메일
     * @type {string}
     * @memberof Jangbu
     */
    taxEmail: string;
    /**
     * 생성일자
     * @type {Date}
     * @memberof Jangbu
     */
    createdAt: Date;
    /**
     * 계좌통합서비스 정보목록
     * @type {Array<ChargeJangbuPartnership>}
     * @memberof Jangbu
     */
    chargeJangbuPartnerships?: Array<ChargeJangbuPartnership> | null;
}

export function JangbuFromJSON(json: any): Jangbu {
    return JangbuFromJSONTyped(json, false);
}

export function JangbuFromJSONTyped(json: any, ignoreDiscriminator: boolean): Jangbu {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'repId': json['repId'],
        'active': json['active'],
        'name': json['name'],
        'taxEmail': json['taxEmail'],
        'createdAt': (new Date(json['createdAt'])),
        'chargeJangbuPartnerships': !exists(json, 'chargeJangbuPartnerships') ? undefined : (json['chargeJangbuPartnerships'] === null ? null : (json['chargeJangbuPartnerships'] as Array<any>).map(ChargeJangbuPartnershipFromJSON)),
    };
}

export function JangbuToJSON(value?: Jangbu | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'repId': value.repId,
        'active': value.active,
        'name': value.name,
        'taxEmail': value.taxEmail,
        'createdAt': (value.createdAt.toISOString()),
        'chargeJangbuPartnerships': value.chargeJangbuPartnerships === undefined ? undefined : (value.chargeJangbuPartnerships === null ? null : (value.chargeJangbuPartnerships as Array<any>).map(ChargeJangbuPartnershipToJSON)),
    };
}


