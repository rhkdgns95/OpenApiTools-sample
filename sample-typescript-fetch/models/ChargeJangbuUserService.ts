/* tslint:disable */
/* eslint-disable */
/**
 * 뱅크다K 웹앱 REST API
 * 뱅크다K 웹앱 REST API : 관리자, 장부사, 고객사
 *
 * The version of the OpenAPI document: 0.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    User,
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './';

/**
 * 
 * @export
 * @interface ChargeJangbuUserService
 */
export interface ChargeJangbuUserService {
    /**
     * 장부사 순번
     * @type {number}
     * @memberof ChargeJangbuUserService
     */
    jangbuId: number;
    /**
     * 정산연월
     * @type {number}
     * @memberof ChargeJangbuUserService
     */
    yearMonth: number;
    /**
     * 고객 순번
     * @type {number}
     * @memberof ChargeJangbuUserService
     */
    userId: number;
    /**
     * 서비스 순번
     * @type {number}
     * @memberof ChargeJangbuUserService
     */
    serviceId: number;
    /**
     * 서비스명
     * @type {string}
     * @memberof ChargeJangbuUserService
     */
    serviceName: string;
    /**
     * 정산합계금액
     * @type {number}
     * @memberof ChargeJangbuUserService
     */
    price: number;
    /**
     * 할인적용금액
     * @type {number}
     * @memberof ChargeJangbuUserService
     */
    discountPrice: number;
    /**
     * 청구금액
     * @type {number}
     * @memberof ChargeJangbuUserService
     */
    billingPrice: number;
    /**
     * 메모(합계 산정 이유 등)
     * @type {string}
     * @memberof ChargeJangbuUserService
     */
    memo: string;
    /**
     * 회원정보
     * @type {User}
     * @memberof ChargeJangbuUserService
     */
    user?: User | null;
}

export function ChargeJangbuUserServiceFromJSON(json: any): ChargeJangbuUserService {
    return ChargeJangbuUserServiceFromJSONTyped(json, false);
}

export function ChargeJangbuUserServiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChargeJangbuUserService {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'jangbuId': json['jangbuId'],
        'yearMonth': json['yearMonth'],
        'userId': json['userId'],
        'serviceId': json['serviceId'],
        'serviceName': json['serviceName'],
        'price': json['price'],
        'discountPrice': json['discountPrice'],
        'billingPrice': json['billingPrice'],
        'memo': json['memo'],
        'user': !exists(json, 'user') ? undefined : UserFromJSON(json['user']),
    };
}

export function ChargeJangbuUserServiceToJSON(value?: ChargeJangbuUserService | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'jangbuId': value.jangbuId,
        'yearMonth': value.yearMonth,
        'userId': value.userId,
        'serviceId': value.serviceId,
        'serviceName': value.serviceName,
        'price': value.price,
        'discountPrice': value.discountPrice,
        'billingPrice': value.billingPrice,
        'memo': value.memo,
        'user': UserToJSON(value.user),
    };
}


