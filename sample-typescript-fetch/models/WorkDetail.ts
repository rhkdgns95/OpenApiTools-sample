/* tslint:disable */
/* eslint-disable */
/**
 * 뱅크다K 웹앱 REST API
 * 뱅크다K 웹앱 REST API : 관리자, 장부사, 고객사
 *
 * The version of the OpenAPI document: 0.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    WorkRequestType,
    WorkRequestTypeFromJSON,
    WorkRequestTypeFromJSONTyped,
    WorkRequestTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface WorkDetail
 */
export interface WorkDetail {
    /**
     * 업무 순번
     * @type {number}
     * @memberof WorkDetail
     */
    workId: number;
    /**
     * 접수코드(장부사 리턴값)
     * @type {string}
     * @memberof WorkDetail
     */
    code: string;
    /**
     * 버전
     * @type {string}
     * @memberof WorkDetail
     */
    version?: string | null;
    /**
     * 
     * @type {WorkRequestType}
     * @memberof WorkDetail
     */
    type?: WorkRequestType;
    /**
     * 접수된 건수
     * @type {number}
     * @memberof WorkDetail
     */
    count?: number | null;
    /**
     * 요청시간
     * @type {string}
     * @memberof WorkDetail
     */
    transAt?: string | null;
    /**
     * 내용
     * @type {string}
     * @memberof WorkDetail
     */
    memo?: string | null;
    /**
     * 제공타입(음식배달 등)
     * @type {string}
     * @memberof WorkDetail
     */
    providerType?: string | null;
    /**
     * 사업장관리번호(EDI)
     * @type {number}
     * @memberof WorkDetail
     */
    bizManageNumber?: number | null;
    /**
     * 조회대상년월(EDI)
     * @type {number}
     * @memberof WorkDetail
     */
    yearMonth?: number | null;
    /**
     * s3에 보관된 접수data
     * @type {string}
     * @memberof WorkDetail
     */
    s3Data?: string | null;
    /**
     * 기타정보(w4c)
     * @type {string}
     * @memberof WorkDetail
     */
    subCode?: string | null;
}

export function WorkDetailFromJSON(json: any): WorkDetail {
    return WorkDetailFromJSONTyped(json, false);
}

export function WorkDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'workId': json['workId'],
        'code': json['code'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'type': !exists(json, 'type') ? undefined : WorkRequestTypeFromJSON(json['type']),
        'count': !exists(json, 'count') ? undefined : json['count'],
        'transAt': !exists(json, 'transAt') ? undefined : json['transAt'],
        'memo': !exists(json, 'memo') ? undefined : json['memo'],
        'providerType': !exists(json, 'providerType') ? undefined : json['providerType'],
        'bizManageNumber': !exists(json, 'bizManageNumber') ? undefined : json['bizManageNumber'],
        'yearMonth': !exists(json, 'yearMonth') ? undefined : json['yearMonth'],
        's3Data': !exists(json, 's3Data') ? undefined : json['s3Data'],
        'subCode': !exists(json, 'subCode') ? undefined : json['subCode'],
    };
}

export function WorkDetailToJSON(value?: WorkDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'workId': value.workId,
        'code': value.code,
        'version': value.version,
        'type': WorkRequestTypeToJSON(value.type),
        'count': value.count,
        'transAt': value.transAt,
        'memo': value.memo,
        'providerType': value.providerType,
        'bizManageNumber': value.bizManageNumber,
        'yearMonth': value.yearMonth,
        's3Data': value.s3Data,
        'subCode': value.subCode,
    };
}


